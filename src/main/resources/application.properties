# General configuration
spring.application.name=XM Crypto currency recommendation

# Datasource
spring.datasource.url=jdbc:h2:mem:cryptocurrencies

# H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.sql.init.mode=always

# Jpa
spring.jpa.open-in-view=false
spring.jpa.defer-datasource-initialization=true

# Batch
spring.batch.job.enabled=false

# Application
import.job.scheduler.fixed-rate=60000
import.max-pool-size=4
import.core-pool-size=4
import.queue-capacity=4
import.chunk-size=2
import.file-path=prices/*.csv

# Cache
spring.cache.jcache.provider=com.github.benmanes.caffeine.jcache.spi.CaffeineCachingProvider
spring.cache.cache-names=rate-limit-bucket
spring.cache.caffeine.spec=maximumSize=100000,expireAfterAccess=3600s

# Bucket4j
bucket4j.enabled=true
bucket4j.filters[0].cache-name=rate-limit-bucket
bucket4j.filters[0].filter-method=servlet
bucket4j.filters[0].url=/api/.*
bucket4j.filters[0].http-response-body={ "status": 429, "message": "Too many requests" }
bucket4j.filters[0].metrics.enabled=true
bucket4j.filters[0].metrics.tags[0].key=IP
bucket4j.filters[0].metrics.tags[0].expression=getRemoteAddr()
bucket4j.filters[0].strategy=first
bucket4j.filters[0].rate-limits[0].cache-key=getRemoteAddr()
bucket4j.filters[0].rate-limits[0].bandwidths[0].refill-speed=greedy
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=5
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=minutes
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1

